.Lexer
    @special_symbol:  .\@+
    @lexeme_name: @(\@ | _)+
    @semicolon: :
    @identifier: ( \@ | _ )+
    @regex: " (\@ | \d | \| | \\ | \s | @ | + | * | _ | \( | \) | . | : )* "
    @spaces: \s+
    @newlines: \n+
    @eof: \0

    .Skip spaces
.End

.Parser

    .Start start

    start -> lexer_block @eof                          : replace($0)

    lexer_block -> ".Lexer" @newlines lexer_definitions @newlines ".End"    : adopt($2)

    # TODO: Make it so we can say  -> lexer_definitions (@newlines lexeme_definition)*
    lexer_definitions -> lexer_definitions @newlines lexeme_definition      : adopt($0), add($2)
        | lexeme_definition                                                 : add($0)

    lexeme_definition -> @lexeme_name @semicolon @regex                     : add($0), add($2)

.End